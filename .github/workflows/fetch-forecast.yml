name: Fetch Weather Forecast & Met Éireann Icons

on:
  schedule:
    - cron: "0 * * * *"   # every hour
  workflow_dispatch:

jobs:
  fetch-forecast-and-icons:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Fetch and save forecast
        run: |
          python3 - <<'PYCODE'
          import requests, json, os
          import xml.etree.ElementTree as ET
          from datetime import datetime
          from collections import defaultdict

          coords = {
              "Portsalon_28Aug": (55.2056262, -7.6350788),
              "Downings_29Aug": (55.1948628, -7.8369654),
              "Downings_30Aug": (55.1948628, -7.8369654),
              "Downings_31Aug": (55.1948628, -7.8369654),
          }

          forecasts_dict = defaultdict(dict)

          for group, (lat, lon) in coords.items():
              url = f"http://openaccess.pf.api.met.ie/metno-wdb2ts/locationforecast?lat={lat};long={lon}"
              r = requests.get(url, timeout=10)
              r.raise_for_status()
              root = ET.fromstring(r.content)

              for time_item in root.findall(".//time"):
                  t = time_item.attrib.get("from")
                  if not t: continue
                  hour = int(t[11:13])
                  if not (7 <= hour <= 19): continue

                  key = (group, t)
                  entry = forecasts_dict[key]
                  entry["group"] = group
                  entry["time"] = t

                  loc = time_item.find("location")
                  if loc is None: continue

                  temp = loc.find("temperature")
                  if temp is not None: entry["Temperature"] = round(float(temp.attrib["value"]),1)
                  rain = loc.find("precipitation")
                  if rain is not None: entry["Rainfall"] = round(float(rain.attrib.get("value",0)),2)
                  wind_speed = loc.find("windSpeed")
                  if wind_speed is not None: entry["WindSpeed"] = round(float(wind_speed.attrib.get("mps",0))*3.6,1)
                  wind_dir = loc.find("windDirection")
                  if wind_dir is not None: entry["WindDirection"] = round(float(wind_dir.attrib.get("deg",0)),0)
                  symbol = loc.find("symbol")
                  if symbol is not None: entry["WeatherSymbol"] = symbol.attrib.get("number","01")

          forecasts = sorted(forecasts_dict.values(), key=lambda x: x["time"])

          os.makedirs("forecast_data", exist_ok=True)
          with open("forecast_data/forecast.json","w") as f:
              json.dump({"timestamp":datetime.utcnow().isoformat()+"Z","forecasts":forecasts}, f, indent=2)
          PYCODE

       - name: Download Met Éireann icons (01.png → 52.png)
        run: |
          mkdir -p forecast_icons
          for i in $(seq -w 1 52); do
            for suffix in "" "d" "n"; do
              url="https://www.met.ie/cms/assets/uploads/2018/01/${i}${suffix}.png"
              if curl --head --silent --fail "$url" > /dev/null; then
                curl -s -o forecast_icons/${i}${suffix}.png "$url"
              fi
            done
          done
          # fallback icon
          curl -s -o forecast_icons/00.png https://www.met.ie/cms/assets/uploads/2018/01/01.png

      - name: Commit changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add forecast_data/forecast.json forecast_icons/
          git diff --cached --quiet || git commit -m "Update forecast data and icons"
          git push
