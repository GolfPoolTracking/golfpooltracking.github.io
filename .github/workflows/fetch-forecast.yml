name: Fetch Met Éireann Forecast 28-31 Aug

on:
  schedule:
    - cron: '0 * * * *'  # every hour on the hour UTC
  workflow_dispatch:

jobs:
  fetch_forecast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install requests xmltodict pytz

      - name: Fetch Met Éireann XML
        run: |
          mkdir -p forecast_data
          curl -s "http://openaccess.pf.api.met.ie/metno-wdb2ts/locationforecast?lat=55.267;long=-7.633" -o forecast_data/raw_forecast.xml

      - name: Convert XML to JSON
        run: |
          python3 - <<'PYCODE'
          import xml.etree.ElementTree as ET
          import json
          import datetime
          import pytz

          tree = ET.parse('forecast_data/raw_forecast.xml')
          root = tree.getroot()

          tz = datetime.timezone.utc
          groups = {
              "Portsalon_28Aug": (datetime.datetime(2025,8,28,11,0, tzinfo=tz), datetime.datetime(2025,8,28,19,0, tzinfo=tz)),
              "Downings_29Aug": (datetime.datetime(2025,8,29,11,0, tzinfo=tz), datetime.datetime(2025,8,29,19,0, tzinfo=tz)),
              "Downings_30Aug": (datetime.datetime(2025,8,30,11,0, tzinfo=tz), datetime.datetime(2025,8,30,19,0, tzinfo=tz)),
              "Downings_31Aug": (datetime.datetime(2025,8,31,7,0, tzinfo=tz),  datetime.datetime(2025,8,31,15,0, tzinfo=tz))
          }

          forecasts = []
          seen = set()

          for time_el in root.findall('.//time'):
              time_str = time_el.attrib.get('from')
              if not time_str:
                  continue
              dt = datetime.datetime.fromisoformat(time_str.replace('Z', '+00:00'))

              loc = time_el.find('location')
              if loc is None:
                  continue

              group_name = None
              for gname, (start_dt, end_dt) in groups.items():
                  if start_dt <= dt <= end_dt:
                      group_name = gname
                      break
              if not group_name:
                  continue

              key = (group_name, dt)
              if key in seen:
                  continue
              seen.add(key)

              entry = {"group": group_name, "time": dt.isoformat()}

              temp = loc.find('temperature')
              if temp is not None:
                  entry['Temperature'] = round(float(temp.attrib.get('value',0)),1)

              winddir = loc.find('windDirection')
              if winddir is not None:
                  entry['WindDirection'] = float(winddir.attrib.get('deg',0))

              windspeed = loc.find('windSpeed')
              if windspeed is not None:
                  entry['WindSpeed'] = round(float(windspeed.attrib.get('mps',0))*3.6)

              precip = loc.find('precipitation')
              if precip is not None:
                  entry['Rainfall'] = round(float(precip.attrib.get('value',0)),1)

              symbol = loc.find('symbol')
              if symbol is not None:
                  entry['WeatherSymbol3'] = symbol.attrib.get('number')

              forecasts.append(entry)

          if not forecasts:
              forecasts = [{"group":"Portsalon_28Aug","time":datetime.datetime.now(tz).isoformat(),
                            "Temperature":"N/A","Rainfall":0,"WindSpeed":0,"WindDirection":0,"WeatherSymbol3":"1"}]

          out = {"timestamp": datetime.datetime.now(tz).isoformat(), "forecasts": forecasts}

          with open('forecast_data/forecast.json','w') as f:
              json.dump(out, f, indent=2)
          print(f"Wrote {len(forecasts)} forecast entries to forecast_data/forecast.json")
          PYCODE

      - name: Commit and push forecast.json
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add forecast_data/forecast.json
          git commit -m "Update forecast.json [skip ci]" || echo "No changes"
          git push
